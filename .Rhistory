library(gdiPipeline)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl)
library(gdiPipeline)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl)
library(gdiPipeline)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl)
map="Elep_allLoci.lmap.txt"
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl)
map="Elep_allLoci.Imap.txt"
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl)
map_df <- read.table(paste(newDir,"/",map, sep=""))
map_df <- read.table(paste(map, sep=""))
table(map_df)
t <- table(map_df[,2])
str(t)
t
paste(t, collapse=" ")
paste(names(t), collapse=" ")
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl)
library(gdiPipeline)
BPPCtlTemplate(wd)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
map_df <- read.table(paste(map, sep=""))
map_df
map_df <- read.table(paste(map, sep=""))
temp <- c("Eseg", "Nueces")
which(temp %in% map_df)
which(temp %in% map_df[,2])
map_df <- read.table(paste(map, sep=""))
temp <- c("Eseg", "Nueces")
replace <- "test"
lapply(temp, gsub, replacement=replace, x=map_df)
test <- lapply(temp, gsub, replacement=replace, x=map_df)
test
map_df <- read.table(paste(map, sep=""))
temp <- c("Eseg", "Nueces")
replace <- "test"
test <- data.frame(lapply(data, function(x) {
gsub(temp, replace, x)
}))
test
map_df
str(map_df)
map_df <- read.table(paste(map, sep=""))
temp <- "Eseg"
replace <- "test"
test <- data.frame(lapply(data, function(x) {
gsub(temp, replace, x)
}))
test
map_df <- read.table(paste(map, sep=""))
temp <- "Eseg"
replace <- "test"
map_df[,2] <- lapply(map_df[,2], gsub, pattern = temp, replacement = replace, fixed = TRUE)
map_df
map_df <- read.table(paste(map, sep=""))
temp <- "Eseg"
replace <- "test"
map_df[,2] <- lapply(map_df[,2], gsub, pattern = temp, replacement = replace, fixed = TRUE)
map_df
map_df <- read.table(paste(map, sep=""))
map_df
map_df <- read.table(paste(map, sep=""))
temp <- "Eseg"
replace <- "test"
map_df[,2] <- lapply(map_df[,2], gsub, pattern = "Eseg", replacement = "test", fixed = TRUE)
map_df <- read.table(paste(map, sep=""))
temp <- "Eseg"
replace <- "test"
map_df[,2] <- lapply(map_df[,2], gsub, pattern = "Eseg", replacement = "test")
map_df
map_df[,2] <- lapply(map_df[,2], gsub, pattern = "Eseg", replacement = "test")
map_df <- read.table(paste(map, sep=""))
map_df <- lapply(map_df, gsub, pattern = "Eseg", replacement = "test")
map_df
map_df[] <- lapply(map_df, gsub, pattern = "Eseg", replacement = "test")
map_df
map_df <- read.table(paste(map, sep=""))
map_df[] <- lapply(map_df, gsub, pattern = "Eseg", replacement = "test")
map_df
map_df <- read.table(paste(map, sep=""))
temp <- "Eseg"
replace <- "test"
map_df[2] <- lapply(map_df[2], gsub, pattern = "Eseg", replacement = "test")
map_df
library(gdiPipeline)
wd="/Users/dmacguigan/Documents/NearLab/LepidumProject/BPP/GDI"
treefile="Elep.tree"
map="Elep_allLoci.Imap.txt"
priors="priors.txt"
heredity = "heredity.txt"
loci = "Elep_allLoci.txt"
ctl = "ctlTemplate.ctl"
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
bppTaskFile(wd)
?list.dirs
library(gdiPipeline)
bppTaskFile(wd)
dirs <- list.dirs(path=paste(wd,"/model*/*",sep=""))
dirs
dirs <- list.dirs(path=paste(wd))
dirs
dirs
dirs <- list.dirs(path=paste(wd))
dirs
class(dirs)
str(dirs)
test <- grep("tau", dirs)
test
test <- grep("tau", dirs, value=TRUE)
test
library(gdiPipeline)
dirs <- list.dirs(path=paste(wd))
bppTaskFile(wd)
dirs <- grep("tau", list.dirs(path=paste(wd,"/model*/*",sep="")), value=TRUE)
dirs
library(gdiPipeline)
bppTaskFile(wd)
library(gdiPipeline)
bppTaskFile(wd)
dirs <- list.dirs(wd)
dirs <- grep("tau", dirs, value=TRUE)
test <- gsub(" */model", " ./model", a)
test <- gsub(" */model", " ./model", dirs)
test
dirs <- list.dirs(wd)
dirs <- grep("tau", dirs, value=TRUE)
test <- gsub(" .*/model", " .*/model", dirs)
test
dirs <- list.dirs(wd)
dirs <- grep("tau", dirs, value=TRUE)
dirs
dirs <- list.dirs(wd)
dirs <- grep("tau", dirs, value=TRUE)
test <- gsub("/.*/model", "/.*/model", dirs)
test
dirs <- list.dirs(wd)
dirs <- grep("tau", dirs, value=TRUE)
test <- gsub("/.*/model", "\./model", dirs)
dirs <- list.dirs(wd)
dirs <- grep("tau", dirs, value=TRUE)
test <- gsub("/.*/model", "./model", dirs)
test
library(gdiPipeline)
bppTaskFile(wd)
library(gdiPipeline)
BPPCtlTemplate <- function(wd){
setwd(wd)
fileConn<-file("ctlTemplate.ctl")
writeLines(c("  seed =  -1",
"  seqfile = loci.txt",
"  Imapfile = Imap.txt",
"  mcmcfile = mcmc.txt",
"  speciesdelimitation = 0",
"  speciestree = 0",
"  species&tree = ",
"                 nsamples",
"                 phy;",
"  usedata = 1",
"  nloci = n",
"  thetaprior = a b",
"  tauprior = a b",
"  heredity = 2 heredity.txt",
"  locusrate = 1 2.0",
"  finetune = 1: .2 .0002 .001 .00001 .08 .02 .01 .01 .01",
"  print = 1 0 0",
"  burnin = 10000",
"  sampfreq = 50",
"  nsample = 10000"), fileConn)
close(fileConn)
}
bppInputs <- function(wd, treefile, map, priors, heredity, loci, ctl, nloci) {
# set working directory
setwd(wd)
# read in priors
prior_df <- read.table(priors, header=FALSE)
# read in the tree
tree <- read.tree(treefile)
#get tip labels
tipLabs <- (tree$tip.label)
# get internal node numbers, skipping root node
n <- length(tipLabs) + tree$Nnode
n <- (length(tipLabs) + 1):n
# first create directories for fully split model (always model 1)
# for each combination of priors
dir.create("model1")
for(j in 1:nrow(prior_df)){
newDir = paste("model1/tau",paste(prior_df[j,1:2], collapse="-"),"theta",paste(prior_df[j,3:4], collapse="-"), sep="")
dir.create(newDir)
file.copy(loci, paste(newDir,"/loci.txt", sep=""))
file.copy(heredity, paste(newDir,"/heredity.txt", sep=""))
file.copy(map, paste(newDir,"/Imap.txt", sep=""))
file.copy(ctl, paste(newDir,"/bpp.ctl", sep=""))
# write the tree for this delimitation model to a file
write.tree(tree, file="model1.tree")
tree_newick <- readLines("model1.tree")
# modify the BPP control file and the map file
ctlTxt <- readLines(paste(newDir,"/bpp.ctl",sep=""))
map_df <- read.table(paste(newDir,"/Imap.txt", sep=""))
map_table <- table(map_df[,2])
taxa_names <- paste(names(map_table), collapse=" ")
taxa_counts <- paste(map_table, collapse=" ")
taxa <- (tree$tip.label)
ctlTxt <- sub("phy", tree_newick, ctlTxt)
ctlTxt <- sub("species&tree = ", paste("species&tree = ", taxa_names, sep=""), ctlTxt)
ctlTxt <- sub("nsamples", taxa_counts, ctlTxt)
ctlTxt <- sub("thetaprior = a b", paste("thetaprior = ", paste(prior_df[j,3:4], collapse=" "), sep=""), ctlTxt)
ctlTxt <- sub("tauprior = a b", paste("tauaprior = ", paste(prior_df[j,1:2], collapse=" "), sep=""), ctlTxt)
ctlTxt <- sub("tauprior = a b", paste("tauaprior = ", paste(prior_df[j,1:2], collapse=" "), sep=""), ctlTxt)
ctlTxt <- sub("nloci = n", paste("nloci = ", nloci, sep=""), ctlTxt)
writeLines(ctlTxt, paste(newDir,"/bpp.ctl",sep=""))
close(paste(newDir,"/bpp.ctl",sep=""))
write.table(map_df, file=paste(newDir,"/Imap.txt", sep=""), row.names = FALSE, col.names = FALSE, quote=FALSE)
}
# for each clade in the tree
# first
count = 2
for(i in n){
# create new directory for each sp delim mode
modelDir <- paste("model", count, sep="")
dir.create(modelDir)
count = count + 1
# get tips for clade i
t <- tips(tree, node=i)
t_prune <- t[2:length(t)]
t_keep <- t[1]
# create new name for collpased node
newName <- paste(t, collapse="")
# drop all but one tip in the clade
tempT <- drop.tip(tree, t_prune)
# rename the remaining tip
tempT$tip.label[tempT$tip.label==t_keep] <- newName
# write new tree to a file
write.tree(tempT, file=paste(modelDir, ".tree", sep=""))
# for each combination of priors
for(j in 1:nrow(prior_df)){
newDir = paste(modelDir, "/tau",paste(prior_df[j,1:2], collapse="-"),"theta",paste(prior_df[j,3:4], collapse="-"), sep="")
dir.create(newDir)
file.copy(loci, paste(newDir,"/loci.txt", sep=""))
file.copy(heredity, paste(newDir,"/heredity.txt", sep=""))
file.copy(map, paste(newDir,"/Imap.txt", sep=""))
file.copy(ctl, paste(newDir,"/bpp.ctl", sep=""))
# write the tree for this delimitation model to a file
tree_newick <- readLines(paste(modelDir, ".tree", sep=""))
# modify the BPP control file and the map file
ctlTxt <- readLines(paste(newDir,"/bpp.ctl",sep=""))
map_df <- read.table(paste(newDir,"/Imap.txt", sep=""))
# replace names in the map file
for(k in t){
map_df[2] <- lapply(map_df[2], gsub, pattern = k, replacement = "fakeName")
}
map_df[2] <- lapply(map_df[2], gsub, pattern = "fakeName", replacement = newName)
map_table <- table(map_df[,2])
taxa_names <- paste(names(map_table), collapse=" ")
taxa_counts <- paste(map_table, collapse=" ")
taxa <- (tree$tip.label)
ctlTxt <- sub("phy", tree_newick, ctlTxt)
ctlTxt <- sub("species&tree = ", paste("species&tree = ", taxa_names, sep=""), ctlTxt)
ctlTxt <- sub("nsamples", taxa_counts, ctlTxt)
ctlTxt <- sub("thetaprior = a b", paste("thetaprior = ", paste(prior_df[j,3:4], " e", collapse=" "), sep=""), ctlTxt)
ctlTxt <- sub("tauprior = a b", paste("tauaprior = ", paste(prior_df[j,1:2], collapse=" "), sep=""), ctlTxt)
ctlTxt <- sub("tauprior = a b", paste("tauaprior = ", paste(prior_df[j,1:2], collapse=" "), sep=""), ctlTxt)
ctlTxt <- sub("nloci = n", paste("nloci = ", nloci, sep=""), ctlTxt)
writeLines(ctlTxt, paste(newDir,"/bpp.ctl",sep=""))
write.table(map_df, file=paste(newDir,"/Imap.txt", sep=""), row.names = FALSE, col.names = FALSE, quote=FALSE)
}
}
}
bppTaskFile <- function(wd) {
dirs <- list.dirs(path=wd)
dirs <- grep("tau", dirs, value=TRUE)
dirs <- gsub("/.*/model", "./model", dirs)
commands <- NULL
for(i in dirs){
newCommand = paste("cd ", i, ";bpp bpp.ctl", sep="")
commands = c(commands, newCommand)
}
fileConn<-file("BPPTaskFile.txt")
writeLines(commands, con = fileConn)
close(fileConn)
}
library(gdiPipeline)
wd="/Users/dmacguigan/Documents/NearLab/LepidumProject/BPP/GDI"
treefile="Elep.tree"
map="Elep_allLoci.Imap.txt"
priors="priors.txt"
heredity = "heredity.txt"
loci = "Elep_allLoci.txt"
ctl = "ctlTemplate.ctl"
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
bppTaskFile(wd)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
bppTaskFile(wd)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
bppTaskFile(wd)
library(gdiPipeline)
BPPCtlTemplate(wd)
wd="/Users/dmacguigan/Documents/NearLab/LepidumProject/BPP/GDI"
treefile="Elep.tree"
map="Elep_allLoci.Imap.txt"
priors="priors.txt"
heredity = "heredity.txt"
loci = "Elep_allLoci.txt"
ctl = "ctlTemplate.ctl"
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
bppTaskFile(wd)
test <- read.tree(treefile)
library(ape)
test <- read.tree(treefile)
plot(test)
nodelabels()
tipLabs <- (test$tip.label)
n <- length(tipLabs) + test$Nnode
n <- (length(tipLabs) + 1):n
n
length(tipLabs)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
bppTaskFile(wd)
tree <- read.tree(treefile)
tipLabs <- (tree$tip.label)
n <- length(tipLabs) + tree$Nnode
n <- (length(tipLabs) + 2):n
n
library(gdiPipeline)
wd="/Users/dmacguigan/Documents/NearLab/LepidumProject/BPP/GDI"
treefile="Elep.tree"
map="Elep_allLoci.Imap.txt"
priors="priors.txt"
heredity = "heredity.txt"
loci = "Elep_allLoci.txt"
ctl = "ctlTemplate.ctl"
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
library(gdiPipeline)
BPPCtlTemplate(wd)
bppInputs(wd, treefile, map,
priors,
heredity, loci,
ctl, 14)
