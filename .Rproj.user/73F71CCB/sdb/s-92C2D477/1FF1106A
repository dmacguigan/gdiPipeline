{
    "collab_server" : "",
    "contents" : "# create inputs for BPP analyses\n\nBPPCtlTemplate <- function(wd){\n  setwd(wd)\n  fileConn<-file(\"ctlTemplate.ctl\")\n  writeLines(c(\"  seed =  -1\",\n  \"  seqfile = loci.txt\",\n  \"  Imapfile = Imap.txt\",\n  \"  outfile = out.txt\",\n  \"  mcmcfile = mcmc.txt\",\n  \"  speciesdelimitation = 0\",\n  \"  speciestree = 0\",\n  \"  species&tree = \",\n  \"                 nsamples\",\n  \"                 phy;\",\n  \"  cleandata = 0\",\n  \"  usedata = 1\",\n  \"  nloci = n\",\n  \"  thetaprior = a b\",\n  \"  tauprior = a b\",\n  \"  heredity = 2 heredity.txt\",\n  \"  locusrate = 1 2.0\",\n  \"  finetune = 1: .2 .0002 .001 .00001 .08 .02 .01 .01 .01\",\n  \"  print = 1 0 0\",\n  \"  burnin = 10000\",\n  \"  sampfreq = 50\",\n  \"  nsample = 10000\"), fileConn)\n  close(fileConn)\n}\n\nbppInputs <- function(wd, treefile, map, priors, heredity, loci, ctl, nloci) {\n  # set working directory\n  setwd(wd)\n\n  # read in priors\n  prior_df <- read.table(priors, header=FALSE)\n\n  # read in the tree\n  tree <- read.tree(treefile)\n\n  #get tip labels\n  tipLabs <- (tree$tip.label)\n\n  # get internal node numbers, skipping root node\n  n <- length(tipLabs) + tree$Nnode\n  n <- (length(tipLabs) + 2):n\n\n  # first create directories for fully split model (always model 1)\n  # for each combination of priors\n  dir.create(\"model1\")\n  for(j in 1:nrow(prior_df)){\n    newDir = paste(\"model1/tau\",paste(prior_df[j,1:2], collapse=\"-\"),\"theta\",paste(prior_df[j,3:4], collapse=\"-\"), sep=\"\")\n    dir.create(newDir)\n    file.copy(loci, paste(newDir,\"/loci.txt\", sep=\"\"))\n    file.copy(heredity, paste(newDir,\"/heredity.txt\", sep=\"\"))\n    file.copy(map, paste(newDir,\"/Imap.txt\", sep=\"\"))\n    file.copy(ctl, paste(newDir,\"/bpp.ctl\", sep=\"\"))\n    # write the tree for this delimitation model to a file\n    write.tree(tree, file=\"model1.tree\")\n    tree_newick <- readLines(\"model1.tree\")\n    # modify the BPP control file and the map file\n    ctlTxt <- readLines(paste(newDir,\"/bpp.ctl\",sep=\"\"))\n    map_df <- read.table(paste(newDir,\"/Imap.txt\", sep=\"\"))\n    map_table <- table(map_df[,2])\n    taxa_names <- paste(names(map_table), collapse=\" \")\n    taxa_counts <- paste(map_table, collapse=\" \")\n    taxa <- (tree$tip.label)\n    ctlTxt <- sub(\"phy\", tree_newick, ctlTxt)\n    ctlTxt <- sub(\"species&tree = \", paste(\"species&tree = \", length(tipLabs), \" \", taxa_names, sep=\"\"), ctlTxt)\n    ctlTxt <- sub(\"nsamples\", taxa_counts, ctlTxt)\n    ctlTxt <- sub(\"thetaprior = a b\", paste(\"thetaprior = \", paste(prior_df[j,3:4], collapse=\" \"), \" e\", sep=\"\"), ctlTxt)\n    ctlTxt <- sub(\"tauprior = a b\", paste(\"tauprior = \", paste(prior_df[j,1:2], collapse=\" \"), sep=\"\"), ctlTxt)\n    ctlTxt <- sub(\"nloci = n\", paste(\"nloci = \", nloci, sep=\"\"), ctlTxt)\n    writeLines(ctlTxt, paste(newDir,\"/bpp.ctl\",sep=\"\"))\n    write.table(map_df, file=paste(newDir,\"/Imap.txt\", sep=\"\"), row.names = FALSE, col.names = FALSE, quote=FALSE)\n  }\n\n  # for each clade in the tree\n  # first\n  count = 2\n  for(i in n){\n    # create new directory for each sp delim mode\n    modelDir <- paste(\"model\", count, sep=\"\")\n    dir.create(modelDir)\n    count = count + 1\n    # get tips for clade i\n    t <- tips(tree, node=i)\n    t_prune <- t[2:length(t)]\n    t_keep <- t[1]\n    # create new name for collpased node\n    newName <- paste(t, collapse=\"\")\n    # drop all but one tip in the clade\n    tempT <- drop.tip(tree, t_prune)\n    # rename the remaining tip\n    tempT$tip.label[tempT$tip.label==t_keep] <- newName\n    # write new tree to a file\n    write.tree(tempT, file=paste(modelDir, \".tree\", sep=\"\"))\n    # for each combination of priors\n    for(j in 1:nrow(prior_df)){\n      newDir = paste(modelDir, \"/tau\",paste(prior_df[j,1:2], collapse=\"-\"),\"theta\",paste(prior_df[j,3:4], collapse=\"-\"), sep=\"\")\n      dir.create(newDir)\n      file.copy(loci, paste(newDir,\"/loci.txt\", sep=\"\"))\n      file.copy(heredity, paste(newDir,\"/heredity.txt\", sep=\"\"))\n      file.copy(map, paste(newDir,\"/Imap.txt\", sep=\"\"))\n      file.copy(ctl, paste(newDir,\"/bpp.ctl\", sep=\"\"))\n      # write the tree for this delimitation model to a file\n      tree_newick <- readLines(paste(modelDir, \".tree\", sep=\"\"))\n      # modify the BPP control file and the map file\n      ctlTxt <- readLines(paste(newDir,\"/bpp.ctl\",sep=\"\"))\n      map_df <- read.table(paste(newDir,\"/Imap.txt\", sep=\"\"))\n      # replace names in the map file\n      for(k in t){\n        map_df[2] <- lapply(map_df[2], gsub, pattern = k, replacement = \"fakeName\")\n      }\n      map_df[2] <- lapply(map_df[2], gsub, pattern = \"fakeName\", replacement = newName)\n      map_table <- table(map_df[,2])\n      taxa_names <- paste(names(map_table), collapse=\" \")\n      taxa_counts <- paste(map_table, collapse=\" \")\n      taxa <- (tree$tip.label)\n      ctlTxt <- sub(\"phy\", tree_newick, ctlTxt)\n      ctlTxt <- sub(\"species&tree = \", paste(\"species&tree = \", length(map_table), \" \", taxa_names, sep=\"\"), ctlTxt)\n      ctlTxt <- sub(\"nsamples\", taxa_counts, ctlTxt)\n      ctlTxt <- sub(\"thetaprior = a b\", paste(\"thetaprior = \", paste(prior_df[j,3:4], collapse=\" \"), \" e\", sep=\"\"), ctlTxt)\n      ctlTxt <- sub(\"tauprior = a b\", paste(\"tauprior = \", paste(prior_df[j,1:2], collapse=\" \"), sep=\"\"), ctlTxt)\n      ctlTxt <- sub(\"nloci = n\", paste(\"nloci = \", nloci, sep=\"\"), ctlTxt)\n      writeLines(ctlTxt, paste(newDir,\"/bpp.ctl\",sep=\"\"))\n      write.table(map_df, file=paste(newDir,\"/Imap.txt\", sep=\"\"), row.names = FALSE, col.names = FALSE, quote=FALSE)\n    }\n  }\n}\n\nbppTaskFile <- function(wd, col) {\n  dirs <- list.dirs(path=wd)\n  dirs <- grep(\"tau\", dirs, value=TRUE)\n  dirs <- gsub(\"/.*/model\", \"./model\", dirs)\n  commands <- NULL\n  for(i in dirs){\n    newCommand = paste(\"cd \", i, \";bpp bpp.ctl\", sep=\"\")\n    commands = c(commands, newCommand)\n  }\n  fileConn<-file(\"BPPTaskFile.txt\")\n  writeLines(commands, con = fileConn)\n  close(fileConn)\n}\n\nbppSummarizeGDI <- function(wd, col) {\n  setwd(wd)\n  # get all BPP dirs in the wd\n  dirs <- list.dirs(path=wd)\n  dirs <- grep(\"tau\", dirs, value=TRUE)\n  # list to store all gdi estimates\n  allGDIList <- vector(mode = \"list\", length = length(dirs))\n  count=1\n  for(i in dirs) {\n    # read in the posterior\n    mcmc <- read.table(paste(i, \"/mcmc.txt\", sep=\"\"), header=TRUE)\n    p <- strsplit(i, \"/\")\n    model <- p[[1]][length(p[[1]])-1]\n    # read in the model tree\n    tree <- read.tree(paste(model, \".tree\", sep=\"\"))\n    taxa <- tree$tip.label\n    thetaList <- vector(mode = \"list\", length = length(taxa))\n    tauList <- vector(mode = \"list\", length = length(taxa))\n    gdiList <- vector(mode = \"list\", length = length(taxa))\n    gdiTaxa <- vector(mode = \"list\", length = length(taxa))\n    cols <- colnames(mcmc)\n    # for each taxon in the tree\n    for(j in 1:length(taxa)){\n      # get theta that matches taxon\n      thetaList[[j]] <- mcmc[,j+1]\n      temp <- sapply(taxa, function(x) (grepl(x, names(mcmc)[j+1], fixed = TRUE)))\n      sp <- taxa[temp]\n      # get sister species or node of taxon\n      sis <- getSisters(tree, sp, mode=\"label\")\n      if(is.character(sis[[1]])){\n        node <- findMRCA(tree, tips=c(sis[[1]],sp), type=\"node\")\n        index <- ncol(mcmc) - ((length(taxa) + tree$Nnode) + 1 - node)\n        tauList[[j]] <- mcmc[,index]\n      } else {\n        node <- sis[[1]] - 1\n        index <- ncol(mcmc) - ((length(taxa) + tree$Nnode) + 1 - node)\n        tauList[[j]] <- mcmc[,index]\n      }\n      # calculate gdi\n      gdiList[[j]] <- (1-exp((-2*tauList[[j]]/thetaList[[j]])))\n      # save list of species\n      gdiTaxa[[j]] <- sp\n    }\n    # plot gdi\n    p <- strsplit(i, \"/\")\n    priors <- p[[1]][length(p[[1]])]\n    print(model)\n    print(priors)\n    dat <- data.frame(matrix(unlist(gdiList), ncol=length(gdiList), byrow=F))\n    colnames(dat) <- unlist(gdiTaxa)\n    pdf(file=paste(model, \"_\", priors, \"_gdi.pdf\", sep=\"\"), width=8, height = 6)\n    p <- ggplot(data = melt(dat), aes(x=value, color=variable, fill=variable)) +\n      xlim(c(0,1)) +\n      geom_vline(xintercept = 0.2, lty=2)+\n      geom_vline(xintercept = 0.7, lty=2)+\n      geom_density(alpha=0.1) +\n      scale_color_manual(values=col) +\n      scale_fill_manual(values=col) +\n      labs(color=\"species\", fill=\"species\", x=\"GDI\")+\n      ggtitle(label=paste(model, priors, sep=\" \")) +\n      annotate(\"text\", label=\"species\", x=0.85, y=Inf, hjust=0.5, vjust=1) +\n      annotate(\"text\", label=\"ambiguous\", x=0.45, y=Inf, hjust=0.5, vjust=1) +\n      annotate(\"text\", label=\"populations\", x=0.1, y=Inf, hjust=0.5, vjust=1) +\n      theme_minimal()\n    print(p)\n    dev.off()\n    allGDIList[[count]] <- dat\n    names(allGDIList)[count] <- paste(model, priors, sep=\"\")\n    count=count+1\n  }\n  return(allGDIList)\n}\n",
    "created" : 1571752429102.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2567126851",
    "id" : "1FF1106A",
    "lastKnownWriteTime" : 1572024489,
    "last_content_update" : 1572024489260,
    "path" : "~/gdiPipeline/R/bppInputs.R",
    "project_path" : "R/bppInputs.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}